module matrix div
======================

Using matrix_divided
---------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided(34, 23)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,3],[1,4,5]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided("hi", 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([['3',5],[5,'t']], 7)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[4,6],[3,5]], "hi")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[3],[4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[5],[8]], 5.6)
[[0.89], [1.43]]

>>> matrix_divided([[5.5,9],[6,0]], 3)
[[1.83, 3.0], [2.0, 0.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

>>> matrix_divided([[1, 2], [4, 5]], 2)
[[0.5, 1.0], [2.0, 2.5]]

>>> matrix_divided([[1]], 1)
[[1.0]]

>>> matrix_divided([[1, 2], [4]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
